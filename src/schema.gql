# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CommentEntity {
  """The comment that is written for a customer by a sales agent"""
  comment: String!

  """The customer to which that comment was writte"""
  customer: CustomerEntity!

  """The user that wrote the comment"""
  user: UserEntity!
}

type ContactInfoEntity {
  """The customer that owns the contact info"""
  customer: CustomerEntity!

  """Contact info value to be used for calling"""
  value: String!
}

"""Input for creation of customers"""
input CreateCustomerDTO {
  """Contact information for customer"""
  contactInfo: [String!]!

  """First name of customer being created"""
  firstName: String!

  """Last name of customer being created"""
  lastName: String!
}

type CustomerEntity {
  """The contact info entities for the customer"""
  contactInfo: [ContactInfoEntity!]!

  """First name of the customer"""
  firstName: String!

  """Last name of the customer"""
  lastName: String!

  """Sales Agent Associated with a customer"""
  salesAgent: UserEntity!
}

type Mutation {
  createCustomer(createCustomerDTO: CreateCustomerDTO!): CustomerEntity!
  deleteCustomer(
    """ID of the customer that has to be deleted"""
    id: Int!
  ): CustomerEntity!
  updateCustomer(
    """ID of customer record being updated"""
    id: Int!
    updateCustomerDTO: UpdateCustomerDTO!
  ): CustomerEntity!
}

type Query {
  """Returns a customer object of specified id"""
  customer(
    """ID of the needed customer to be returned"""
    id: Int!
  ): CustomerEntity!

  """Returns the user with the specified id in the query"""
  user(
    """ID of the user needed to be returned"""
    id: Int!
  ): UserEntity!
}

type StatusUpdateEntity {
  """The comment attached with a status update"""
  comment: String!

  """The user that applied the status update"""
  user: UserEntity!
}

"""Input for updating customers"""
input UpdateCustomerDTO {
  """First name of customer being created"""
  firstName: String

  """Last name of customer being created"""
  lastName: String
}

type UserEntity {
  """User status Disabled/Enabled"""
  banned: Boolean!

  """The comments that are added to a specific customer by a user"""
  comments: [CommentEntity!]!

  """A set of customers being managed by the user"""
  customers: [CustomerEntity!]!

  """User Email"""
  email: String!

  """First name of the user"""
  firstName: String!

  """Last name of the user"""
  lastName: String!

  """Middle name of the user"""
  middleName: String!

  """User phone number"""
  phoneNumber: String

  """The status updates that are applied on a customer by a user"""
  statusUpdates: [StatusUpdateEntity!]!
}