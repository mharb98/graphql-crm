# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CommentEntity {
  """The comment that is written for a customer by a sales agent"""
  comment: String!

  """The customer to which that comment was writte"""
  customer: CustomerEntity!

  """The user that wrote the comment"""
  user: UserEntity!
}

type ContactInfoEntity {
  """The customer that owns the contact info"""
  customer: CustomerEntity!

  """Contact info value to be used for calling"""
  value: String!
}

"""Input for the creation of a new comment"""
input CreateCommentDTO {
  """The comment that will be added"""
  comment: String!
}

"""Input for creation of customers contact info"""
input CreateContactInfoDTO {
  """Value for contact info being added"""
  value: String!
}

"""Input for creation of customers"""
input CreateCustomerDTO {
  """Contact information for customer"""
  contactInfo: [String!]!

  """First name of customer being created"""
  firstName: String!

  """Last name of customer being created"""
  lastName: String!
}

input CreateProductDTO {
  """Description of the product"""
  description: String!

  """Name of the product"""
  name: String!
}

"""Input for the creation of a new purchase"""
input CreatePurchaseDTO {
  tempFied: Float!
}

"""Input for the creation of a new status"""
input CreateStatusDTO {
  """Name of the status to be created"""
  name: String!
}

"""Input for creation of users"""
input CreateUserDTO {
  """Email of user"""
  email: String!

  """First name of the user"""
  firstName: String!

  """Last name of user"""
  lastName: String!

  """Middle name of the user"""
  middleName: String

  """Phone number of user"""
  phoneNumber: String!
}

type CustomerEntity {
  """The comments written by users to track activity for the customer"""
  comments: [CommentEntity!]!

  """The contact info entities for the customer"""
  contactInfo: [ContactInfoEntity!]!

  """First name of the customer"""
  firstName: String!

  """Last name of the customer"""
  lastName: String!

  """The set of purchases completed by a customer"""
  purchases: [PurchaseEntity!]!

  """Sales Agent Associated with a customer"""
  salesAgent: UserEntity!

  """The status updates that are applied on the customer by a user"""
  statusUpdates: [StatusUpdateEntity!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type InstallmentEntity {
  """The amount that was paid in the installment"""
  amount: Float!

  """The due date for the installment payment"""
  dueDate: DateTime!

  """The purchase for which the installment will be paid"""
  purchase: PurchaseEntity!
}

type Mutation {
  """Create a new comment for a specific customer"""
  createComment(
    createCommentDto: CreateCommentDTO!

    """The ID of the customer to which the comment will be added"""
    id: Int!
  ): CommentEntity!

  """Add new contact info for a customer"""
  createContactInfo(
    createContactInfoDto: CreateContactInfoDTO!

    """ID of customer with the contact info"""
    customerId: Int!
  ): ContactInfoEntity!
  createCustomer(createCustomerDTO: CreateCustomerDTO!): CustomerEntity!

  """Creates and returns a product"""
  createProduct(createProductDTO: CreateProductDTO!): ProductEntity!

  """Create a new purchase"""
  createPurchase(
    createPurchaseDto: CreatePurchaseDTO!

    """ID of the customer for which the purchase is being added"""
    customerId: Int!
  ): PurchaseEntity!

  """Creates a new status"""
  createStatus(createStatusDto: CreateStatusDTO!): StatusEntity!

  """Creates a user record"""
  createUser(createUserDTO: CreateUserDTO!): UserEntity!

  """Delete an existing comment by ID"""
  deleteComment(
    """The ID of the customer to which the comment will be added"""
    id: Int!
  ): CommentEntity!

  """Deletes an existing contact info"""
  deleteContactInfo(
    """ID of contact info to be deleted"""
    id: Int!
  ): ContactInfoEntity!
  deleteCustomer(
    """ID of the customer that has to be deleted"""
    id: Int!
  ): CustomerEntity!

  """Delete a purchase"""
  deletePurchase(
    """ID of the purchase to be deleted"""
    id: Int!
  ): PurchaseEntity!

  """Delete a user from CRM"""
  deleteUser(
    """ID of user being deleted"""
    id: Int!
  ): UserEntity!

  """Disable a user from accessing the CRM"""
  disableUser(
    """ID of the user being disabled"""
    id: Int!
  ): UserEntity!

  """Enable a user to access the CRM"""
  enableUser(
    """ID of the user being enabled"""
    id: Int!
  ): UserEntity!

  """Update existing customer contact info"""
  updateContactInfo(
    """ID of contact info to be deleted"""
    id: Int!
    updateContactInfoDto: UpdateContactInfoDTO!
  ): ContactInfoEntity!
  updateCustomer(
    """ID of customer record being updated"""
    id: Int!
    updateCustomerDTO: UpdateCustomerDTO!
  ): CustomerEntity!

  """Update an existing purchase"""
  updatePurchase(
    """Id of the purchase to be updated"""
    id: Int!
    updatePurchaseDto: UpdatePurchaseDTO!
  ): PurchaseEntity!

  """Updates a new status"""
  updateStatus(updateStatusDto: UpdateStatusDTO!): StatusEntity!

  """Updates an existing user record"""
  updateUser(
    """ID of the user record being updated"""
    id: Int!
    updateUserDto: UpdateUserDTO!
  ): UserEntity!
}

type ProductEntity {
  """The description of the product"""
  description: String!

  """The name of the product"""
  name: String!

  """The price of the product"""
  price: Float!

  """The purchases where the product was bought"""
  purchases: [PurchaseProductEntity!]

  """The total rating of the product"""
  rating: Float!

  """The amount that is still available in the product"""
  stock: Int!
}

type PurchaseEntity {
  """The customer that completed the purchase"""
  customer: CustomerEntity!

  """The installments paid for the purchase"""
  installments: InstallmentEntity!

  """The products that were bought in the purchase"""
  products: [PurchaseProductEntity!]!

  """The amount of taxes added to the purchase"""
  taxes: Float!

  """The amount of discount on the items"""
  totalDiscount: Float!

  """The total Price of items in the purchase"""
  totalPrice: Float!
}

type PurchaseProductEntity {
  """The amount that was taken for the product in a specific purchase"""
  amount: Int!

  """The discount that was appleid on the product"""
  discount: Float!

  """The product that is bought"""
  product: ProductEntity!

  """The purchase to which the product belongs"""
  purchase: PurchaseEntity!
}

type Query {
  """Returns a list of paginated products"""
  QueryProducts: [ProductEntity!]!

  """Query users model and returns a paginated users result"""
  QueryUsers: [UserEntity!]!

  """Find a specific comment by id"""
  comment(
    """The ID of the comment to be returned"""
    id: Int!
  ): CommentEntity!

  """Returns a contact info specified by an ID"""
  contactInfo(
    """ID of the needed contact info to be returned"""
    id: Int!
  ): ContactInfoEntity!

  """Returns a customer object of specified id"""
  customer(
    """ID of the needed customer to be returned"""
    id: Int!
  ): CustomerEntity!

  """Returns a product for the specified ID"""
  product(
    """ID of the product that needs to be returned"""
    id: Int!
  ): ProductEntity!

  """Returns a purchase for the specified id in the query"""
  purchase(
    """ID of the purchase to be returned"""
    id: Int!
  ): PurchaseEntity!

  """Returns a status for the specified ID """
  status(
    """ID of the status that needs to be returnd"""
    id: Int!
  ): StatusEntity!

  """Returns the user with the specified id in the query"""
  user(
    """ID of the user needed to be returned"""
    id: Int!
  ): UserEntity!
}

type StatusEntity {
  """The name of the status"""
  name: String!

  """The updates in which the status was used"""
  statusUpdates: [StatusUpdateEntity!]
}

type StatusUpdateEntity {
  """The comment attached with a status update"""
  comment: String!

  """The customer to which the status update was made"""
  customer: CustomerEntity!

  """The status that is applied in the update"""
  status: StatusEntity!

  """The user that applied the status update"""
  user: UserEntity!
}

"""Input for updating customer contact info"""
input UpdateContactInfoDTO {
  """Value of contact info"""
  value: String!
}

"""Input for updating customers"""
input UpdateCustomerDTO {
  """First name of customer being created"""
  firstName: String

  """Last name of customer being created"""
  lastName: String
}

input UpdatePurchaseDTO {
  """Total Taxes for the purchase"""
  taxes: Float

  """Total Discount applied on the purchase"""
  totalDiscount: Float

  """Total Price for the purchase"""
  totalPrice: Float
}

"""Input for the update of an existing status"""
input UpdateStatusDTO {
  """Name of the status to be updated"""
  name: String
}

"""Input for updating an existing user record"""
input UpdateUserDTO {
  """Email"""
  email: String

  """First Name"""
  firstName: String

  """Last name of user being updated"""
  lastName: String

  """Middle Name"""
  middleName: String

  """Phone Number"""
  phoneNumber: String
}

type UserEntity {
  """User status Disabled/Enabled"""
  banned: Boolean!

  """The comments that are added to a specific customer by a user"""
  comments: [CommentEntity!]!

  """A set of customers being managed by the user"""
  customers: [CustomerEntity!]!

  """User Email"""
  email: String!

  """First name of the user"""
  firstName: String!

  """Last name of the user"""
  lastName: String!

  """Middle name of the user"""
  middleName: String

  """User phone number"""
  phoneNumber: String

  """The status updates that are applied on a customer by a user"""
  statusUpdates: [StatusUpdateEntity!]!
}